#ifndef UDPSERVER_H
#define UDPSERVER_H
/////////////////////////////////////////////////////////////////////////////////////
#include <QtGlobal>
#include <QtNetwork/QUdpSocket>
#include <QSettings>
#include <QThread>
#include <QDebug>
/////////////////////////////////////////////////////////////////////////////////////
#define SKEY_UDPSERVER_PORT "/UdpServer/Port"
#define TVA_UDPPACK_ID      0x44C5EB64038F4462 //8bytes
/////////////////////////////////////////////////////////////////////////////////////
struct PackFromSN
{
    qint64 packID;
    qint64 timeUTC;
    double azAxis;
    double elAxis;
    double azVelAxis;
    double elVelAxis;
    double azOrient;
    double elOrient;
    double azHoriz;
    double elHoriz;
    double alpha;
    double delta;
    double LST;
};
////////////////////////////////////////////////////////////////////////////////////
class UdpServer : public QThread
{
    Q_OBJECT
public:
    explicit UdpServer(QSettings *settings = 0);
    ~UdpServer();
protected:
    void run();
private:
    static const quint16 _defaultPort = 4444;
    QSettings  *_settings;
    QUdpSocket *_socket;
    quint16    _port;
    PackFromSN _pack;
    void loadSettings(QSettings *settings);
    void saveSettings(QSettings *settings);
signals:
    void forwardData(PackFromSN *pack);
};
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
#endif // UDPSERVER_H
