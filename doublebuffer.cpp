#include "doublebuffer.h"
/////////////////////////////////////////////////////////////////////////////////////
DoubleBuffer::DoubleBuffer(const qint64 singleBufSize) :
    _size(singleBufSize),
    _rapidBuf(new SingleBuffer(_size)),
    _slowBuf(new SingleBuffer(_size))
{ }
/////////////////////////////////////////////////////////////////////////////////////
DoubleBuffer::~DoubleBuffer()
{
    delete _rapidBuf;
    delete _slowBuf;
}
/////////////////////////////////////////////////////////////////////////////////////
void DoubleBuffer::switchBuffers()
{
    SingleBuffer *foo = _rapidBuf;
    _rapidBuf = _slowBuf;
    _slowBuf = foo;
}
/////////////////////////////////////////////////////////////////////////////////////
SingleBuffer *DoubleBuffer::getRapidBuf()
{
    return _rapidBuf;
}
/////////////////////////////////////////////////////////////////////////////////////
SingleBuffer *DoubleBuffer::getSlowBuf()
{
    return _slowBuf;
}
/////////////////////////////////////////////////////////////////////////////////////
void DoubleBuffer::setSize(const qint64 singleBufSize)
{
    if(_size != singleBufSize)
    {
        _size = singleBufSize;
        _rapidBuf->setSize(_size);
        _slowBuf->setSize(_size);
    }
}
/////////////////////////////////////////////////////////////////////////////////////
void DoubleBuffer::unlockSlowBuf()
{
    _slowBuf->unlock();
}
/////////////////////////////////////////////////////////////////////////////////////
