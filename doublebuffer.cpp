#include "doublebuffer.h"
/////////////////////////////////////////////////////////////////////////////////////
DoubleBuffer::DoubleBuffer(const qint64 &singleBufSize) :
    FSize(singleBufSize),
    FRapidBuf(new SingleBuffer(FSize)),
    FSlowBuf(new SingleBuffer(FSize))
{ }
/////////////////////////////////////////////////////////////////////////////////////
DoubleBuffer::~DoubleBuffer()
{
    delete FRapidBuf;
    delete FSlowBuf;
}
/////////////////////////////////////////////////////////////////////////////////////
void DoubleBuffer::switchBuffers()
{
    SingleBuffer *foo = FRapidBuf;
    FRapidBuf = FSlowBuf;
    FSlowBuf = foo;
}
/////////////////////////////////////////////////////////////////////////////////////
SingleBuffer *DoubleBuffer::getRapidBuf()
{
    return FRapidBuf;
}
/////////////////////////////////////////////////////////////////////////////////////
SingleBuffer *DoubleBuffer::getSlowBuf()
{
    return FSlowBuf;
}
/////////////////////////////////////////////////////////////////////////////////////
void DoubleBuffer::setSize(const qint64 &singleBufSize)
{
    if(FSize != singleBufSize)
    {
        FSize = singleBufSize;
        FRapidBuf->setSize(FSize);
        FSlowBuf->setSize(FSize);
    }
}
/////////////////////////////////////////////////////////////////////////////////////
void DoubleBuffer::unlockSlowBuf()
{
    FSlowBuf->unlock();
}
/////////////////////////////////////////////////////////////////////////////////////
