#include "singlebuffer.h"
/////////////////////////////////////////////////////////////////////////////////////
SingleBuffer::SingleBuffer(const qint64 &size) :
    FData(new uchar [size]),
    FLocked(false)
{ }
/////////////////////////////////////////////////////////////////////////////////////
SingleBuffer::~SingleBuffer()
{
    delete [] FData;
}
/////////////////////////////////////////////////////////////////////////////////////
void SingleBuffer::lock()
{
    FLocked = true;
}
/////////////////////////////////////////////////////////////////////////////////////
void SingleBuffer::unlock()
{
    FLocked = false;
}
/////////////////////////////////////////////////////////////////////////////////////
bool SingleBuffer::isLocked()
{
    return FLocked;
}
/////////////////////////////////////////////////////////////////////////////////////
void *SingleBuffer::getData()
{
    return FData;
}
/////////////////////////////////////////////////////////////////////////////////////
void SingleBuffer::setSize(const qint64 &size)
{
    delete [] FData;
    FData = new uchar [size];
}
/////////////////////////////////////////////////////////////////////////////////////
