#include "singlebuffer.h"
/////////////////////////////////////////////////////////////////////////////////////
SingleBuffer::SingleBuffer(const qint64 size) :
    _data(new uchar [size]),
    _locked(false)
{ }
/////////////////////////////////////////////////////////////////////////////////////
SingleBuffer::~SingleBuffer()
{
    delete [] _data;
}
/////////////////////////////////////////////////////////////////////////////////////
void SingleBuffer::lock()
{
    _locked = true;
}
/////////////////////////////////////////////////////////////////////////////////////
void SingleBuffer::unlock()
{
    _locked = false;
}
/////////////////////////////////////////////////////////////////////////////////////
bool SingleBuffer::isLocked()
{
    return _locked;
}
/////////////////////////////////////////////////////////////////////////////////////
void *SingleBuffer::getData()
{
    return _data;
}
/////////////////////////////////////////////////////////////////////////////////////
void SingleBuffer::setSize(const qint64 size)
{
    delete [] _data;
    _data = new uchar [size];
}
/////////////////////////////////////////////////////////////////////////////////////
