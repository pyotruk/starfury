/*Класс для хранения параметров (центр масс, размер)
 объекта, найденного на изображении*/
#ifndef ARTIFACT_H
#define ARTIFACT_H
/////////////////////////////////////////////////////////////////////////////////////
#include <QPoint>
#include <QVector>
/////////////////////////////////////////////////////////////////////////////////////
class Artifact
{
public:
    Artifact();
    Artifact(const Artifact&);
    Artifact& operator =(const Artifact&);
    bool operator ==(const Artifact &a) const {return this->_magnitude == a._magnitude;}
    bool operator !=(const Artifact &a) const {return this->_magnitude != a._magnitude;}
    bool operator <(const Artifact &a)  const {return this->_magnitude <  a._magnitude;}
    QPoint& center();
    double& magnitude();
    void setCenter(QPoint&);
    void setMagnitude(double&);
private:
    QPoint _center;
    double _magnitude; //размер в усл.ед.
};
/////////////////////////////////////////////////////////////////////////////////////
typedef QVector<Artifact> ArtifactVector;
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
#endif // ARTIFACT_H
