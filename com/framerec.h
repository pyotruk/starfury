/* Класс для ввода кадров в программу.
   Реализует два канала выдачи кадров [frame0, frame1].
   Передача указателей на готовые (принятые) кадры другим
   блокам (объектам) программы через механизм сигналов/слотов */
#ifndef FRAMEREC_H
#define FRAMEREC_H
/////////////////////////////////////////////////////////////////////////////////////
#include <QThread>
#include <QSettings>
#include <QSize>
/////////////////////////////////////////////////////////////////////////////////////
#include "com/sharedmem.h"
#include "boxes/frame.h"
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
class FrameReceiver : public QThread
{
    Q_OBJECT
public:
    explicit FrameReceiver(QSettings*,
                           FrameBox *f0,
                           FrameBox *f1);
    ~FrameReceiver();
    void stop() {_stopped = true;}
protected:
    void run();
private:
    FrameReceiver(const FrameReceiver&) {}
    FrameReceiver& operator =(const FrameReceiver&) {return *this;}
    static const int _timeout = 20;
    static const unsigned long _termTimeout = 500;
    QSettings      *_settings;
    FrameBox       *_frame0;
    FrameBox       *_frame1;
    SharedMem      *_sharedMem;
    volatile bool   _stopped;
    QSize           _bufSize;
    void checkFrameSize(const int width,
                        const int height);
signals:
    void frame0Ready(FrameBox*);
    void frame1Ready(FrameBox*);
    void frameSizeChanged(int width, int height);
};
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
#endif // FRAMERECEIVER_H
