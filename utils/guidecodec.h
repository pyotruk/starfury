#ifndef GUIDECODEC_H
#define GUIDECODEC_H
/////////////////////////////////////////////////////////////////////////////////////
#include <QtGlobal>
//#include <QDataStream>
#include <qmath.h>
/////////////////////////////////////////////////////////////////////////////////////
#include "boxes/star.h"
/////////////////////////////////////////////////////////////////////////////////////
static const int    __bytesPerStar = 7;       //кол-во байт на одну звезду в каталоге
static const double __deltaPerBlock = 0.02;   //[radians] размер блока в каталоге по склонению
static const int    __starsPerBlock = 175000; //размер блока в каталоге по кол-ву звёзд
static const double __marginKoef = 1.55;      //коэффициент запаса при расчёте размера рабочего блока
/////////////////////////////////////////////////////////////////////////////////////
union Tib4
{
    qint32 i;
    uchar b[4];
};
/////////////////////////////////////////////////////////////////////////////////////
namespace guidecat
{
void decodeStar(Star &star,
                const uchar *data);

void calcPositionRange(const qint64 streamSize,
                       const double lowerDelta,
                       const double upperDelta,
                       qint64 &startPos,
                       qint64 &finPos);
}
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
#endif // GUIDECODEC_H
