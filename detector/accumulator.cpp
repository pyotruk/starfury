#include "accumulator.h"
/////////////////////////////////////////////////////////////////////////////////////
const FrameBox& Accumulator::add(FrameBox &f)
{
    this->checkSize(f.data().header());
    this->checkNum();
    double mean = cv::mean(f.data().asCvMat())[0];
    cv::addWeighted(f.data().asCvMat(),
                    _alpha,
                    _frame.data().asCvMat(),
                    _beta,
                    0 - mean,
                    _frame.data().asCvMat());
    _frame.setTimeMarker(f.timeMarker());
    return _frame;
}
/////////////////////////////////////////////////////////////////////////////////////
void Accumulator::checkSize(const Frame::Header &newHeader)
{
    if(_frame.data().header() != newHeader)
    {
        _frame.data().setHeaderAndRealloc(newHeader);
        _frame.data().fillZeros();
    }
}
/////////////////////////////////////////////////////////////////////////////////////
void Accumulator::checkNum()
{
    ++_num;
    if(_num > _capacity)
    {
        _num = 0;
        _frame.data().fillZeros();
    }
}
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
